{
  "numFailedTestSuites": 1,
  "numFailedTests": 0,
  "numPassedTestSuites": 0,
  "numPassedTests": 0,
  "numPendingTestSuites": 0,
  "numPendingTests": 0,
  "numRuntimeErrorTestSuites": 1,
  "numTodoTests": 0,
  "numTotalTestSuites": 1,
  "numTotalTests": 0,
  "openHandles": [],
  "snapshot": {
    "added": 0,
    "didUpdate": false,
    "failure": false,
    "filesAdded": 0,
    "filesRemoved": 0,
    "filesRemovedList": [],
    "filesUnmatched": 0,
    "filesUpdated": 0,
    "matched": 0,
    "total": 0,
    "unchecked": 0,
    "uncheckedKeysByFile": [],
    "unmatched": 0,
    "updated": 0
  },
  "startTime": 1601972578842,
  "success": false,
  "testResults": [
    {
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    SyntaxError: C:\\Users\\chaitanya\\Desktop\\MyReactApp\\__test__\\test.js: Support for the experimental syntax 'jsx' isn't currently enabled (16:19):\n\n    \u001b[0m \u001b[90m 14 | \u001b[39mtest(\u001b[32m'username check'\u001b[39m\u001b[33m,\u001b[39m()\u001b[33m=>\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 15 | \u001b[39m{\u001b[0m\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 16 | \u001b[39mwrapper \u001b[33m=\u001b[39m shallow(\u001b[33m<\u001b[39m\u001b[33mApp12\u001b[39m\u001b[33m/\u001b[39m\u001b[33m>\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m    | \u001b[39m                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 17 | \u001b[39mwrapper\u001b[33m.\u001b[39mfind(\u001b[32m'input[type=\"text\"]'\u001b[39m)\u001b[33m.\u001b[39msimulate(\u001b[32m'change'\u001b[39m\u001b[33m,\u001b[39m {target\u001b[33m:\u001b[39m {name\u001b[33m:\u001b[39m \u001b[32m'username'\u001b[39m\u001b[33m,\u001b[39m value\u001b[33m:\u001b[39m \u001b[32m'React'\u001b[39m}})\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 18 | \u001b[39mexpect(wrapper\u001b[33m.\u001b[39mstate(\u001b[32m'username'\u001b[39m))\u001b[33m.\u001b[39mtoEqual(\u001b[32m'React'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 19 | \u001b[39m})\u001b[0m\n\n    Add @babel/preset-react (https://git.io/JfeDR) to the 'presets' section of your Babel config to enable transformation.\n    If you want to leave it as-is, add @babel/plugin-syntax-jsx (https://git.io/vb4yA) to the 'plugins' section to enable parsing.\n\n      \u001b[2mat Parser._raise (\u001b[22mnode_modules/@babel/parser/src/parser/error.js\u001b[2m:60:45)\u001b[22m\n      \u001b[2mat Parser.raiseWithData (\u001b[22mnode_modules/@babel/parser/src/parser/error.js\u001b[2m:55:17)\u001b[22m\n      \u001b[2mat Parser.expectOnePlugin (\u001b[22mnode_modules/@babel/parser/src/parser/util.js\u001b[2m:157:18)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:1180:18)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:563:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:543:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:527:17)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:343:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:308:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:263:21)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": {
        "loc": {
          "line": 16,
          "column": 18
        },
        "pos": 461,
        "missingPlugin": [
          "jsx",
          "flow",
          "typescript"
        ],
        "code": "BABEL_PARSE_ERROR"
      },
      "testFilePath": "C:\\Users\\chaitanya\\Desktop\\MyReactApp\\__test__\\test.js",
      "testResults": []
    }
  ],
  "wasInterrupted": false,
  "coverageMap": {}
}